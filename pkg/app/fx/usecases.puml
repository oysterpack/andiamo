@startuml
actor :App : as APP

usecase APP_TIMEOUTS << envconfig >> as "Application start and stop timeouts
are loaded from env vars"

note bottom of APP_TIMEOUTS {
APPX12_START_TIMEOUT
APPX12_STOP_TIMEOUT
}

usecase APP_LOGGING as "zerolog is used for logging"
usecase ZEROLOG_CONFIG << envconfig >> as "zerolog config is loaded
from env vars"

note bottom of ZEROLOG_CONFIG {
APPX12_LOG_GLOBAL_LEVEL
APPX12_LOG_DISABLE_SAMPLING
}

usecase LOG_APP_DESC as "Standard fields are logged
with each event"

note bottom of LOG_APP_DESC {
- app.Desc
- app.InstanceID
- app.Package
}

usecase LOG_TIMESTAMP as "Log event timestamps are
logged in UNIX time"

usecase LOG_DURATION as "Log event time.Duration fields
are logged in millisecs"

usecase LOG_ERROR_STACK_MARSHALLER as "Error stack marshalling
is supported"

usecase GO_LOGGING as "zerolog is used as go
standard logger output"

usecase DEPENDENCY_INJECTION << Provide >> as "Dependency injection"
usecase PROVIDE_APP_DESC << Provide >> as "app.Desc is provided"

note top of PROVIDE_APP_DESC {
      <<envconfig>>
The application descriptor
is loaded from env vars
---
APPX12_ID
APPX12_NAME
APPX12_VERSION
APPX12_RELEASE_ID
}

usecase PROVIDE_APP_INSTANCE_ID << Provide >> as "app.InstanceID is provided"

note top of PROVIDE_APP_INSTANCE_ID  {
Each app instance is assigned a
unique instance ID upon starting up
}

usecase PROVIDE_LOGGER << Provide >> as "*zerolog.Logger is provided"

DEPENDENCY_INJECTION .up.> PROVIDE_APP_DESC
DEPENDENCY_INJECTION .up.> PROVIDE_APP_INSTANCE_ID
DEPENDENCY_INJECTION .up.> PROVIDE_LOGGER
APP_INSTANCE_ID <.up. PROVIDE_APP_INSTANCE_ID

usecase LOG_APP_LIFECYCLE_EVENTS as "App lifecycle
events are logged
---
Start
Running
Stop
Stopped"

usecase LOG_APP_INVOKE_ERRORS as "App func invocation errors
are logged"

usecase LOG_APP_START_STOP_ERRORS as "App start/stop
errors are logged"

usecase LOG_STOP_SIGNAL_EVENT as "App stop os.Signal is logged"

usecase APP_STOP_SIGNALS as "Listens for stop signals
---
SIGINT
SIGTERM
"

LOG_EVENT ..> STD_EVENTS

APP_LOGGING .up.> GO_LOGGING
APP_LOGGING .up.> ZEROLOG_CONFIG
APP_LOGGING ..> LOG_APP_DESC
APP_LOGGING ...> LOG_TIMESTAMP
APP_LOGGING ...> LOG_DURATION
APP_LOGGING ....> LOG_APP_INVOKE_ERRORS
APP_LOGGING ....> LOG_APP_START_STOP_ERRORS
APP_LOGGING ....> LOG_STOP_SIGNAL_EVENT
APP_LOGGING ... LOG_ERROR_STACK_MARSHALLER


APP -up-> DEPENDENCY_INJECTION
APP --> APP_TIMEOUTS
APP --> APP_LOGGING

APP --> LOG_APP_LIFECYCLE_EVENTS
APP -> APP_STOP_SIGNALS

@enduml